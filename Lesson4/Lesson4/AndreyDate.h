#pragma once

/*
Создать структуру дата (Date), в которой 3 интовских поля. 
Год, месяц, день.
Допустим минимальная дата это 2000-01-01. Т.е. меньше дата быть не может.
1. Функция принимает на вход дату, а возвращает дату вчерашнего дня.
2. Функция принимает на вход 2 даты. Возвращает 0, если они равны, -1 если первая дата меньше второй. 1, если первая дата больше второй.
3. Функция принимает на вход дату, вернуть время года этой даты.
4. Принимает на вход дату, вернуть количество дней прошедших с 2000-01-01.
Создать структуру «временной отрезок» (TimeSegment). Структура содержит 2 даты. _start_date, _end_date. Старт должен быть всегда меньше чем энд.
4. Сделать конструктор, который принимает две даты, но сетает в поле старт меньшую из них, а в энд большую.
5. Функция принимает на вход отрезок, а возвращает  количество дней между end и start. Считаем что в феврале всегда 28 дней.
6. Функция принимает на вход дату и число n. Вернуть отрезок, где стартовой является указанная дата, а end - это указанная дата плюс n дней.
*/

namespace Andrey
{
	static const int kDaysInMonth[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

	struct Date
	{
		int _year;
		int _month;
		int _day;
	};

	int DaysAfterYearStart(int month)
	{
		int result = 0;
		for (int i = 0; i < month - 1; i++)
		{
			result += kDaysInMonth[i];
		}
		return result;
	}

	int DaysAfter2000(Date date)
	{
		return 365 * (date._year - 2000) + DaysAfterYearStart(date._month) + date._day;
	}
}